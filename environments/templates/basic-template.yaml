# Environment Configuration Template
# Copy this file to environments/library/<your-env>.yaml and customize

# Display name for your environment
name: [Your Environment Name]

# Global command name (e.g., claude-python, claude-fullstack)
# This will be registered as a global command for easy access
command-name: claude-[your-env]

# Optional: Override the default base URL for all relative resource paths
# When set, all relative paths (agents, commands, etc.) will be resolved against this base
# Full URLs in resource lists will still take priority over this setting
# Note: {path} is automatically appended if not present
# base-url: https://raw.githubusercontent.com/my-org/my-configs/main
# Or explicitly specify where {path} should go:
# base-url: https://my-server.com/api/v2/{path}/raw

# Dependencies to install (optional)
# These are run sequentially before environment setup
dependencies:
    # Example for Windows: winget install <package>
    # Example for npm: npm install -g <package>
    # Example for Python: uv tool install <package>
    # - uv tool install ruff@latest
    # - npm install -g typescript

# Agents to include (optional)
# Paths are relative to the repository root
agents:
    # - agents/library/code-reviewer.md
    # - agents/library/doc-writer.md
    # - agents/library/test-generator.md

# MCP servers configuration (optional)
mcp-servers:
    # HTTP transport example
    # - name: server-name
    #   scope: user
    #   transport: http
    #   url: https://example.com/mcp
    #   header: X-API-Key: your-key-here  # Optional

    # SSE transport example
    # - name: server-sse
    #   scope: user
    #   transport: sse
    #   url: https://example.com/sse

    # Stdio transport example (local command)
    # - name: local-server
    #   scope: user
    #   command: npx some-mcp-server
    #   env: ENV_VAR=value  # Optional

# Slash commands to include (optional)
# Paths are relative to the repository root
slash-commands:
    # - slash-commands/library/commit.md
    # - slash-commands/library/test.md

# Output styles (optional)
# Paths are relative to the repository root
output-styles:
    # - output-styles/library/concise.md

# Hooks for automatic actions (optional)
hooks:
    # Files to download for all hooks (listed once, used by multiple events)
    files:
        # - hooks/library/your-script.py
        # - hooks/library/another-script.py

    # Hook events configuration
    events:
        # Example: Run linter on file changes
        # - event: PostToolUse
        #   matcher: Edit|MultiEdit|Write  # Regex pattern
        #   type: command
        #   command: your-script.py  # Reference the filename from 'files' section above

        # Example: Notification hook
        # - event: Notification
        #   type: command
        #   command: notify-send 'Claude Code' 'Task Complete'

# Model configuration (optional)
# Use one of the official aliases or a custom model name
# Aliases: default, sonnet, opus, haiku, sonnet[1m], opusplan
# Custom: claude-opus-4-1-20250805
# model: opus

# Environment variables (optional)
# Sets environment variables for each Claude Code session
env-variables:
    # BASH_DEFAULT_TIMEOUT_MS: "5000"
    # MAX_MCP_OUTPUT_TOKENS: "50000"
    # CLAUDE_CODE_ENABLE_TELEMETRY: "1"
    # OTEL_METRICS_EXPORTER: "otlp"

# Permissions configuration (optional)
# Controls how Claude Code interacts with your system
permissions:
    # Default permission mode (optional)
    # Options: default, acceptEdits, plan, bypassPermissions
    # defaultMode: acceptEdits

    # Explicitly allowed actions (optional)
    # allow:
    #     - WebFetch
    #     - mcp__context7
    #     - Bash(git diff:*)

    # Explicitly denied actions (optional)
    # deny:
    #     - WebFetch
    #     - Bash(curl:*)
    #     - Read(./.env)

    # Actions requiring confirmation (optional)
    # ask:
    #     - Bash(git push:*)

    # Additional accessible directories (optional)
    # additionalDirectories:
    #     - ../docs/
    #     - /external/project/

# Command launch configuration
command-defaults:
    # Default output style (optional)
    # References filename from 'output-styles' section above (without extension)
    # This replaces the entire system prompt with a specialized one
    # output-style: business-analyst  # Will use business-analyst.md

    # Additional system prompt (optional)
    # Use this when you want to append to Claude's default development prompt
    # Path is relative to the repository root
    # system-prompt: system-prompts/library/your-prompt.md
